<?php
  // Аргумент по ссылке
  function arg(&$a) {
    echo 'Изначальное значение принятой переменной по ссылке: ' . $a . "<br>";
    // изменение переменной $c;
    $a += 5;
    // "Служебные" ф-ции;
    echo 'К-во аргументов ф-ции: ' . func_num_args() . "<br>";
    echo 'Значение n-аргумента (номерация с нуля): ' . func_get_arg(0) . "<br>";
    echo 'Возвращает массив аргументов ф-ции: ' . "<br>";
    $m = func_get_args();
    foreach ($m as $ind => $zn) {
      echo $ind . " = " . $zn . "<br>";
    }
    // ф-ция вернет строку;
    return 'hello, world';
    echo "<br>" . 'эта часть кода уже не выполнится';
  }
  // изначальное значение переменной $c;
  $c = 4;
  // результат выполнения ф-ции будет записан в перменную $b;
  $b = arg($c);
  // значение переменной $c будет уже другим;
  echo 'Новое значение переменной, ранее переданной ф-ции: ' . $c . "<br>";
  echo 'Что вернула ф-ция: ' . $b;
  // Анонимная ф-ция со статическим аргументом;
  $d = function() {
    echo "<br>" . 'анонимная ф-ция';
    static $st = 0;
    $st++;
    echo "<br>" . 'Эта ф-ция вызывалась: ' . $st;

  };
  $d();
  $d();
  $d();
  // Ф-ция возвращает другую ф-цию, которая использует аргумент родительской + принимает свой;
  function a1($a) {
    echo "<br>" . 'Значение принятого аргумента: ' . $a;
    $a++;
    echo "<br>" . 'Ф-ция увлеличила значение аргумента: ' . $a;
    return function ($b = 0) use ($a) {
      echo "<br>" . $a;
      echo "<br>" . $b;
    };
  }
  $inside = a1(3);
  $inside(5);
  $t1 = 5;
  $t2 = 13;
  echo "<br>" . 'Тернарный оператор: ' . ($t1 > $t2 ? $t1 : $t2);